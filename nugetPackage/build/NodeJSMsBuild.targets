<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="12.0">


  <PropertyGroup>

    <BuildDependsOn>
      RestoreNodeJsPackages;
      RestoreToolsPackages;
      $(BuildDependsOn);
      RunJsBuildTasks;
    </BuildDependsOn>

    <RestoreNodeJsPackagesDependsOn>
      $(RestoreNodeJsPackagesDependsOn);
      FindNPM;
      FindPackageTools;
    </RestoreNodeJsPackagesDependsOn>

    <FindPackageToolsDependsOn>
      $(FindPackageToolsDependsOn);
      FindNPM
    </FindPackageToolsDependsOn>

    <CleanDependsOn>
      $(CleanDependsOn);
      CleanNodeJsFiles
    </CleanDependsOn>

    <CleanNodeJsFilesDependsOn>
      $(CleanNodeJsFilesDependsOn);
    </CleanNodeJsFilesDependsOn>

    <RunJsBuildTasksDependsOn>
      $(RunJsBuildTasksDependsOn);
      FindTaskTools;
    </RunJsBuildTasksDependsOn>

    <RestoreToolsPackagesDependsOn>
      $(RestoreToolsPackagesDependsOn);
      RestoreNodeJsPackages;
    </RestoreToolsPackagesDependsOn>

  </PropertyGroup>


<Target Name="FindNPM">
  <Exec ContinueOnError="True" Command='npm -v'>
    <Output TaskParameter="ExitCode" PropertyName="NpmErrorCode"/>
 </Exec>


  <PropertyGroup>
    <Npm Condition="$(NpmErrorCode) == 0">npm</Npm>
    <Npm Condition=" '$(Npm)'=='' And $(NpmErrorCode) != 0 ">npm</Npm>
    <Npm Condition=" '$(Npm)'=='' And Exists('$(MSBuildProjectDirectory)/.bin/npm.cmd') ">"$(MSBuildProjectDirectory)/.bin/npm.cmd"</Npm>
  </PropertyGroup>
</Target>

<Target Name ="FindPackageTools" DependsOnTargets="$(FindPackageToolsDependsOn)">
  <Exec ContinueOnError="True" Command='bower -v'>
    <Output TaskParameter="ExitCode" PropertyName="BowerErrorCode"/>
 </Exec>
 <Exec ContinueOnError="True" Command='tsd -V'>
   <Output TaskParameter="ExitCode" PropertyName="TsdErrorCode"/>
 </Exec>
 <Exec ContinueOnError="True" Command='git --version'>
   <Output TaskParameter="ExitCode" PropertyName="GitErrorCode"/>
 </Exec>

  <PropertyGroup>
    <Bower Condition="$(BowerErrorCode) == 0">bower</Bower>
    <Bower Condition=" '$(Bower)'=='' And Exists('$(MSBuildProjectDirectory)/.bin/bower.cmd') ">"$(MSBuildProjectDirectory)/.bin/bower.cmd"</Bower>
    <Bower Condition=" '$(Bower)'=='' And Exists('$(MSBuildProjectDirectory)/node_modules/.bin/bower') ">"$(MSBuildProjectDirectory)/node_modules/.bin/bower.cmd"</Bower>
    <BowerParam Condition="'$(BowerParam)' == ''">--config.interactive=false</BowerParam>

    <Tsd Condition="$(TsdErrorCode) == 0">tsd</Tsd>
    <Tsd Condition=" '$(Tsd)'=='' And Exists('$(MSBuildProjectDirectory)/.bin/tsd.cmd') ">"$(MSBuildProjectDirectory)/.bin/tsd.cmd"</Tsd>
    <Tsd Condition=" '$(Tsd)'=='' And Exists('$(MSBuildProjectDirectory)/node_modules/.bin/tsd') ">"$(MSBuildProjectDirectory)/node_modules/.bin/tsd.cmd"</Tsd>
  </PropertyGroup>
</Target>

<Target Name="FindTaskTools" DependsOnTargets="$(FindPackageToolsDependsOn)">
  <Exec ContinueOnError="True" Command='gulp -v'>
    <Output TaskParameter="ExitCode" PropertyName="GulpErrorCode"/>
 </Exec>
 <Exec ContinueOnError="True" Command='grunt -v'>
   <Output TaskParameter="ExitCode" PropertyName="GruntErrorCode"/>
</Exec>
  <PropertyGroup>
    <Gulp Condition="$(GulpErrorCode) == 0">gulp</Gulp>
    <Gulp Condition=" '$(Gulp)'=='' And Exists('$(MSBuildProjectDirectory)/.bin/gulp.cmd') ">"$(MSBuildProjectDirectory)/.bin/gulp"</Gulp>
    <Gulp Condition=" '$(Gulp)'=='' And Exists('$(MSBuildProjectDirectory)/node_modules/.bin/gulp') ">"$(MSBuildProjectDirectory)/node_modules/.bin/gulp.cmd"</Gulp>

    <Grunt Condition="$(GruntErrorCode) == 0">grunt</Grunt>
    <Grunt Condition=" '$(Grunt)'=='' And Exists('$(MSBuildProjectDirectory)/.bin/grunt.cmd') ">"$(MSBuildProjectDirectory)/.bin/grunt.cmd"</Grunt>
    <Grunt Condition=" '$(Grunt)'=='' And Exists('$(MSBuildProjectDirectory)/node_modules/.bin/grunt') ">"$(MSBuildProjectDirectory)/node_modules/.bin/grunt.cmd"</Grunt>
  </PropertyGroup>
</Target>

  <Target Name="CleanNodeJsFiles" DependsOnTargets="$(CleanNodeJsFilesDependsOn)">
      <ItemGroup>
        <_filesToDelete Remove="@(_filesToDelete)"/>
        <_filesToDelete Include="%(TypeScriptCompile.RelativeDir)%(TypeScriptCompile.Filename).js"
                        Condition="!$([System.String]::new('%(TypeScriptCompile.Filename)').EndsWith('.d')) and Exists('%(TypeScriptCompile.RelativeDir)%(TypeScriptCompile.Filename).js')" />
        <_filesToDelete Include="%(TypeScriptCompile.RelativeDir)%(TypeScriptCompile.Filename).js.map"
                             Condition="!$([System.String]::new('%(TypeScriptCompile.Filename)').EndsWith('.d')) and Exists('%(TypeScriptCompile.RelativeDir)%(TypeScriptCompile.Filename).js.map')" />
    </ItemGroup>

    <Delete Files="@(_filesToDelete)" />
    <RemoveDir Directories="$(MSBuildProjectDirectory)/bower_components/;$(MSBuildProjectDirectory)/typings/"/>
    <Exec Command="&quot;$(MSBuildProjectDirectory)/DelFolder.bat&quot; $(MSBuildProjectDirectory)/node_modules" />
  </Target>


  <Target Name="RestoreNodeJsPackages" DependsOnTargets="$(RestoreNodeJsPackagesDependsOn)">
    <Warning Text="Unable to find npm command line; NodeJS tasks will not be executed" Condition=" '$(Npm)' == '' "/>
    <Exec Command="$(Npm) install" Condition=" '$(Npm)' != '' " />
    <Message Text="Npm packages restored." Condition=" '$(Npm)' != '' "/>
  </Target>

  <Target Name="RestoreToolsPackages" DependsOnTargets="$(RestoreToolsPackagesDependsOn)">
    <Exec Command="$(Tsd) reinstall" Condition=" '$(Tsd)' != '' And $(GitErrorCode) == 0 " />
    <Message Text="Tsd packages restored." Condition=" '$(Tsd)' != '' And $(GitErrorCode) == 0 "/>
    <Exec Command="$(Bower) install $(BowerParam)" Condition=" '$(Bower)' != '' And $(GitErrorCode) == 0 " />
    <Message Text="Bower packages restored." Condition=" '$(Bower)' != '' And $(GitErrorCode) == 0 "/>
  </Target>

  <Target Name="RunJsBuildTasks" DependsOnTargets="$(RunJsBuildTasksDependsOn)">
    <Exec Command="$(Gulp) $(Configuration)" Condition=" '$(Gulp)' != '' " />
    <Message Text="Gulp tasks for ($Configuration) ran." Condition=" '$(Gulp)' != '' "/>
    <Exec Command="$(Grunt) $(Configuration)" Condition=" '$(Grunt)' != '' "/>
    <Message Text="Grunt tasks for ($Configuration) ran." Condition=" '$(Grunt)' != '' "/>
  </Target>

</Project>
